<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置组件扫描，扫描业务层的实现类-->
    <context:component-scan base-package="com.powernode.service.impl"></context:component-scan>

    <!--读取外部db.properties配置文件-->
    <!--在properties配置文件中配置了一个属性名为username的属性，用${username}取值时，
        容易出现取出的结果不是刚才在properties文件中配置的值
        设置system-properties-mode="FALLBACK"之后会在properties文件中配置的属性值覆盖该属性之前的默认值-->
    <context:property-placeholder location="classpath:db.properties" system-properties-mode="FALLBACK"></context:property-placeholder>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--配置日志-->
    <bean id="configuration" class="org.apache.ibatis.session.Configuration">
        <property name="logImpl" value="org.apache.ibatis.logging.log4j.Log4jImpl"></property>
        <property name="cacheEnabled" value="true"></property>
    </bean>

    <!--配置会话工厂:用于指定xxxMapper.xml位置、数据源、分页插件、日志、别名-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--指定局部xxxMapper.xml位置-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"></property>
        <!--指定分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor"></bean>
            </array>
        </property>
        <!--配置别名-->
        <property name="typeAliasesPackage" value="com.powernode.domain"></property>
        <!--配置日志-->
        <property name="configuration" ref="configuration"></property>
    </bean>

    <!--配置MapperScannerConfigurer,指定mapper层接口存放的位置-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.powernode.mapper"></property>
    </bean>

    <!--配置注解事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启事务-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

</beans>